import os
import sys
import shutil
from pathlib import Path

def setup_ai_engine():
    """Set up the SDG AI Engine directory structure and dependencies"""
    root_dir = Path(__file__).parent.absolute()
    
    # Create the app directory if it doesn't exist
    app_dir = root_dir / "app"
    app_dir.mkdir(exist_ok=True)
    
    # Create data directory
    data_dir = app_dir / "data"
    data_dir.mkdir(exist_ok=True)
    
    # Create __init__.py files
    init_files = [
        app_dir / "__init__.py",
        data_dir / "__init__.py"
    ]
    
    for init_file in init_files:
        if not init_file.exists():
            with open(init_file, 'w') as f:
                f.write("# Generated by setup.py\n")
    
    print("Directory structure set up successfully!")
    
    # Check if we have requirements.txt
    req_file = root_dir / "requirements.txt"
    if not req_file.exists():
        print("Error: requirements.txt not found. Please run the setup again.")
        return
    
    # Suggest next steps
    print("\nSetup complete! Next steps:")
    print("1. Run the following command to create a virtual environment:")
    print("   python -m venv venv")
    print("2. Activate the virtual environment:")
    if sys.platform == "win32":
        print("   venv\\Scripts\\activate")
    else:
        print("   source venv/bin/activate")
    print("3. Install dependencies:")
    print("   pip install -r requirements.txt")
    print("4. Download spaCy model:")
    print("   python -m spacy download en_core_web_md")
    print("5. Start the FastAPI server:")
    print("   cd", root_dir)
    print("   uvicorn app.main:app --reload --host 0.0.0.0 --port 8000")

if __name__ == "__main__":
    setup_ai_engine() 